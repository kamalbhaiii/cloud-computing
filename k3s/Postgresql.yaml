# ConfigMap: PostgreSQL config, pg_hba.conf, init.sql
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: default
data:
  postgresql.conf: |
    listen_addresses = '*'
    port = 5432
    max_connections = 100
    shared_buffers = 128MB
    log_connections = on
    hba_file = '/etc/postgresql/pg_hba.conf'
  pg_hba.conf: |
    # Allow local socket connections
    local   all             all                                     md5
    # Allow remote TCP/IP connections
    host    all             all             0.0.0.0/0               md5
  init.sql: |
    CREATE USER root WITH ENCRYPTED PASSWORD 'admin';
    ALTER USER root WITH SUPERUSER CREATEDB CREATEROLE LOGIN;
    CREATE DATABASE cloud_computing;
    GRANT ALL PRIVILEGES ON DATABASE cloud_computing TO root;

---

# PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgresql-pv
  namespace: default
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/postgres-data"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
              - worker-node-5

---

# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: default
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      type: local

---

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      nodeSelector:
        kubernetes.io/hostname: worker-node-5
      containers:
      - name: postgresql
        image: postgres:17
        args: ["-c", "config_file=/etc/postgresql/postgresql.conf"]
        env:
        - name: POSTGRES_USER
          value: "root"
        - name: POSTGRES_PASSWORD
          value: "admin"
        - name: POSTGRES_DB
          value: "cloud_computing"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgresql-config
          mountPath: /etc/postgresql/pg_hba.conf
          subPath: pg_hba.conf
        - name: postgresql-init
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: postgresql-storage
        persistentVolumeClaim:
          claimName: postgresql-pvc
      - name: postgresql-config
        configMap:
          name: postgresql-config
          items:
            - key: postgresql.conf
              path: postgresql.conf
            - key: pg_hba.conf
              path: pg_hba.conf
      - name: postgresql-init
        configMap:
          name: postgresql-config
          items:
            - key: init.sql
              path: init.sql

---

# NodePort Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30050
