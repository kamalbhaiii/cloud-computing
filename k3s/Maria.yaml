apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-config
  namespace: default
data:
  my.cnf: |
    [mysqld]
    user=mysql
    port=3306
    bind-address=0.0.0.0
    datadir=/var/lib/mysql
    skip-host-cache
    skip-name-resolve
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mariadb-pv
  namespace: default
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/maria-data"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - worker-node-5
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mariadb-pvc
  namespace: default
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      type: local
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      nodeSelector:
        kubernetes.io/hostname: worker-node-5
      containers:
      - name: mariadb
        image: mariadb:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: admin 
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mariadb-storage
          mountPath: "/var/lib/mysql"
        - name: mariadb-config
          mountPath: "/etc/mysql/my.cnf"
          subPath: my.cnf
      volumes:
      - name: mariadb-storage
        persistentVolumeClaim:
          claimName: mariadb-pvc
      - name: mariadb-config
        configMap:
          name: mariadb-config
---

apiVersion: v1
kind: Service
metadata:
  name: mariadb-service
  namespace: default
spec:
  selector:
    app: mariadb
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
    nodePort: 30050
  type: NodePort